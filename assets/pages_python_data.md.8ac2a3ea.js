import{_ as t,o,c as l,O as n}from"./chunks/framework.dda4b555.js";const h=JSON.parse('{"title":"Python数据类型","description":"","frontmatter":{"title":"Python数据类型"},"headers":[],"relativePath":"pages/python/data.md"}'),s={name:"pages/python/data.md"},r=n('<h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-label="Permalink to &quot;数据类型&quot;">​</a></h2><ol><li><p><strong>数值类型</strong></p><ul><li><strong>整数(int)</strong>：用于表示正或负的整数，没有限制大小（在大多数现代计算机上）。</li><li><strong>浮点数(float)</strong>：用于表示实数，即带有小数点的数字。</li><li><strong>复数(complex)</strong>：由实部和虚部组成，通常用于表示数学中的复数。</li></ul></li><li><p><strong>序列类型</strong></p><ul><li><strong>列表(list)</strong>：有序的元素集合，元素之间用逗号分隔，整个列表由方括号包围。列表的元素可以是任何数据类型，且长度可变。</li><li><strong>元组(tuple)</strong>：与列表类似，但元组是不可变的，即一旦创建，就不能修改其内容。元组通常用于表示一组相关的值，例如坐标。</li><li><strong>字符串(str)</strong>：字符序列，用于表示文本。字符串可以用单引号、双引号或三引号来定义。</li></ul></li><li><p><strong>集合类型</strong></p><ul><li><strong>集合(set)</strong>：无序且不包含重复元素的集合。集合用于成员关系测试和消除重复元素。</li></ul></li><li><p><strong>映射类型</strong></p><ul><li><strong>字典(dict)</strong>：无序的键值对集合。字典用于存储键值对，其中键是唯一的，而值可以是任何数据类型。</li></ul></li><li><p><strong>布尔类型</strong></p><ul><li><strong>布尔(bool)</strong>：只有两个值：True 和 False，用于逻辑运算和条件判断。</li></ul></li><li><p><strong>特殊类型</strong></p><ul><li><strong>None</strong>：表示一个空值或没有值。None 是 NoneType 类型的唯一值。</li><li><strong>类型对象</strong>：每个数据类型都是一个对象，有自己的方法和属性。例如，int、float、list 等都是类型对象。</li></ul></li></ol>',2),i=[r];function e(a,g,p,_,c,u){return o(),l("div",null,i)}const f=t(s,[["render",e]]);export{h as __pageData,f as default};
